AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'RankedChoiceServerless Template

  '
Globals:
  Function:
    Timeout: 300
Resources:
  ElectionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: EventId
        AttributeType: S
      KeySchema:
      - AttributeName: EventId
        KeyType: HASH
      TableName: ElectionTable
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
  VoteTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: EventId
        AttributeType: S
      - AttributeName: EventTime
        AttributeType: S
      KeySchema:
      - AttributeName: EventId
        KeyType: HASH
      - AttributeName: EventTime
        KeyType: RANGE
      TableName: VoteTable
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
  CreateElectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: CreateElectionFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::CreateElection
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election
            Method: post
  CreateElectionCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateElectionCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election
            Method: options
  StartElectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: StartElectionFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::StartElection
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/start
            Method: post
  StartElectionCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: StartElectionCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/start
            Method: options
  EndElectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: EndElectionFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::EndElection
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/end
            Method: post
  EndElectionCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: EndElectionCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/end
            Method: options
  RestartElectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: RestartElectionFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::RestartElection
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/restart
            Method: post
  RestartElectionCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RestartElectionCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/restart
            Method: options
  GetElectionResultsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: GetElectionResultsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::GetElectionResults
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/results
            Method: get
  ElectionResultsCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ElectionResultsCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/results
            Method: options
  GetSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: GetSettingsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::GetSettings
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/settings
            Method: get
  SettingsCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SettingsCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/settings
            Method: options
  GetCandidatesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: GetCandidatesFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::GetCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/candidates
            Method: get
  CandidatesCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CandidatesCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/candidates
            Method: options
  SaveSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: SaveSettingsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::SaveSettings
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/settings
            Method: post
  SaveCandidatesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      CodeUri: SaveCandidatesFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::SaveCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/candidates
            Method: post
  VoteCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: VoteCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}
            Method: options
  SaveVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      - DynamoDBCrudPolicy:
          TableName: VoteTable
      CodeUri: SaveVoteFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.VoteController::SaveCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}
            Method: post
  GetVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      - DynamoDBCrudPolicy:
          TableName: VoteTable
      CodeUri: GetVoteFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.VoteController::GetCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}
            Method: get
  SubmitVoteCorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SubmitVoteCorsFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.CorsController::OnOption
      Runtime: dotnetcore3.1
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}/submit
            Method: options
  SubmitVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
      - DynamoDBCrudPolicy:
          TableName: ElectionTable
      - DynamoDBCrudPolicy:
          TableName: VoteTable
      CodeUri: SubmitVoteFunction
      Handler: RankedChoiceServerless::RankedChoiceServerless.VoteController::SubmitVote
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}/submit
            Method: post
Outputs:
  RankedChoiceServerlessApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
