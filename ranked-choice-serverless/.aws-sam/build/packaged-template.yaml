AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'RankedChoiceServerless Template

  '
Globals:
  Function:
    Timeout: 10
Resources:
  AddVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::SubmitVote
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/vote
            Method: post
  StartElectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::StartElection
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/start
            Method: post
  EndElectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::EndElection
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/end
            Method: post
  RestartElectionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::RestartElection
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/restart
            Method: post
  GetElectionResultsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::GetElectionResults
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/results
            Method: get
  GetSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::GetSettings
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/settings
            Method: get
  GetCandidatesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::GetCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/candidates
            Method: get
  SaveSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::SaveSettings
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/settings
            Method: post
  SaveCandidatesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.ElectionController::SaveCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /election/{electionId}/candidates
            Method: post
  SaveVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.VoteController::SaveCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}
            Method: post
  GetVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.VoteController::GetCandidates
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}
            Method: get
  SubmitVoteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://ranked-choice-serverless-s3/ddde57dab10c9580447780a3ca92c297
      Handler: RankedChoiceServerless::RankedChoiceServerless.VoteController::SubmitVote
      Runtime: dotnetcore3.1
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        RankedChoice:
          Type: Api
          Properties:
            Path: /vote/{electionId}/submit
            Method: post
Outputs:
  RankedChoiceServerlessApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
